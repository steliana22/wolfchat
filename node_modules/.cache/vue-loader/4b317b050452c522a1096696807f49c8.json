{"remainingRequest":"/code/node_modules/vue-loader/lib/index.js??vue-loader-options!/code/src/views/Chat.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/code/src/views/Chat.vue","mtime":1564156433072},{"path":"/code/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/code/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/code/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/code/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/code/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.chat h2{\n    font-size: 2.6em;\n    margin-bottom: 0px;\n}\n.chat h5{\n    margin-top: 0px;\n    margin-bottom: 40px;\n}\n.chat span{\n    font-size: 1.2em;\n}\n.chat .time{\n    display: block;\n    font-size: 0.7em;\n}\n.messages{\n    max-height: 300px;\n    overflow: auto;\n}\n",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"container chat\">\n        <h2 class=\"text-primary text-center\">Real-Time Chat</h2>\n        <h5 class=\"text-secondary text-center\">Powered by Vue.js & Firebase</h5>\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <p class=\"text-secondary nomessages\" v-if=\"messages.length == 0\">\n                    [No messages yet!]\n                </p>\n                <div class=\"messages\" v-chat-scroll=\"{always: false, smooth: true}\">\n                    <div v-for=\"message in messages\" :key=\"message.id\">\n                        <span class=\"text-info\">[{{ message.name }}]: </span>\n                        <span>{{message.message}}</span>\n                        <span class=\"text-secondary time\">{{message.timestamp}}</span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-action\">\n                <CreateMessage :name=\"name\"/>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport CreateMessage from '@/components/CreateMessage';\nimport fb from '@/firebase/init';\nimport moment from 'moment';\nexport default {\n    name: 'Chat',\n    props: ['name'],\n    components: {\n        CreateMessage\n    },\n    data() {\n        return {\n            messages: []\n        }\n    },\n    created() {\n        let ref = fb.collection('messages').orderBy('timestamp');\n        ref.onSnapshot(snapshot => {\n            snapshot.docChanges().forEach(change => {\n                if (change.type = 'added') {\n                    let doc = change.doc;\n                    this.messages.push({\n                        id: doc.id,\n                        name: doc.data().name,\n                        message: doc.data().message,\n                        timestamp: moment(doc.data().timestamp).format('LTS')\n                    });\n                }\n            });\n        });\n    }\n}\n</script>\n\n<style>\n.chat h2{\n    font-size: 2.6em;\n    margin-bottom: 0px;\n}\n.chat h5{\n    margin-top: 0px;\n    margin-bottom: 40px;\n}\n.chat span{\n    font-size: 1.2em;\n}\n.chat .time{\n    display: block;\n    font-size: 0.7em;\n}\n.messages{\n    max-height: 300px;\n    overflow: auto;\n}\n</style>"]}]}