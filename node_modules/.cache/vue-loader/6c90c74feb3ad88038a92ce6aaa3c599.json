{"remainingRequest":"C:\\xampp\\htdocs\\WolfChat\\chat\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\WolfChat\\chat\\src\\views\\Chat.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\xampp\\htdocs\\WolfChat\\chat\\src\\views\\Chat.vue","mtime":1564754607488},{"path":"C:\\xampp\\htdocs\\WolfChat\\chat\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\WolfChat\\chat\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\WolfChat\\chat\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\WolfChat\\chat\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\WolfChat\\chat\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.chat h2{\n    font-size: 2.6em;\n    margin-bottom: 0px;\n}\n.chat span{\n    font-size: 1.2em;\n}\n.chat .time{\n    display: block;\n    font-size: 0.7em;\n}\n.messages{\n    max-height: 300px;\n    overflow: auto;\n}\n.userinfo{\n    padding: 30px;\n}\n.chatroom {\n    border: 1px solid black;\n}\n.searcharea {\n    padding: 30px;\n}\n",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"container chat\">\n        <div class=\"userinfo\">\n            <div class=\"row\">\n                <div class=\"col-md-3\"><img src=\"http://www.gregorydoylefirm.com/wp-content/uploads/blank-profile-pic.jpg\" width=\"80px\"></div>\n                <div class=\"col-md-9\"><h2 class=\"text-primary\">{{ name }}</h2></div>\n            </div>\n        </div>\n        \n        <div class=\"searcharea\">\n            <div class=\"row\">\n                <div class=\"col-md-9\"><input class=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"/></div>\n                <div class=\"col-md-3\"><button class=\"btn btn-primary\" @click=\"pickLocation()\"> + </button></div>\n            </div>\n        </div>\n        \n        <div class=\"card\">\n            <div class=\"card-body\">\n                <p class=\"text-secondary nomessages\" v-if=\"users.length == 0\">\n                    [No messages yet!]\n                </p>\n                <div class=\"messages\" v-chat-scroll=\"{always: false, smooth: true}\">\n                    <div v-for=\"user in users\" :key=\"user.id\">\n                        <div class=\"chatroom\" @click=\"gotoMessages(user.id, user.lat, user.lng)\">\n                            <h5 class=\"text-info\">{{ user.chatname }}</h5> <br/>\n                            <p>{{ user.lat }} <b> x </b> {{ user.lng }}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- <div class=\"card-action\">\n                <CreateMessage :name=\"name\"/>\n            </div> -->\n        </div>\n    </div>\n</template>\n\n<script>\nimport CreateMessage from '@/components/CreateMessage'\nimport fb from '@/firebase/init'\nimport moment from 'moment'\n\nexport default {\n    name: 'Chat',\n    props: ['lat', 'lng'],\n    components: {\n        CreateMessage\n    },\n    data() {\n        return {\n            users: [],\n            name: \"\",\n        }\n    },\n    created() {\n        let ref = fb.collection('users').orderBy('timestamp');\n        ref.onSnapshot(snapshot => {\n            snapshot.docChanges().forEach(change => {\n                if (change.type = 'added') {\n                    let doc = change.doc;\n                    this.users.push({\n                        id: doc.id,\n                        chatname: doc.data().chatname,\n                        lat: doc.data().lat,\n                        lng: doc.data().lng,\n                        timestamp: moment(doc.data().timestamp).format('LTS')\n                    });\n                }\n            });\n        });\n    },\n    mounted(){\n        this.name = localStorage.getItem('username');\n    },\n    methods: {\n        pickLocation() {\n            console.log(\"Choose the chat location on the map\");\n            this.$root.$emit('setLocation');\n        },\n        gotoMessages(messageid, lat, lng) {\n            localStorage.latitude = lat;\n            localStorage.longitude = lng;\n            localStorage.setItem('ChatId', messageid);\n            this.$router.push({name: 'Messages'});\n        }\n    }\n}\n</script>\n\n<style>\n.chat h2{\n    font-size: 2.6em;\n    margin-bottom: 0px;\n}\n.chat span{\n    font-size: 1.2em;\n}\n.chat .time{\n    display: block;\n    font-size: 0.7em;\n}\n.messages{\n    max-height: 300px;\n    overflow: auto;\n}\n.userinfo{\n    padding: 30px;\n}\n.chatroom {\n    border: 1px solid black;\n}\n.searcharea {\n    padding: 30px;\n}\n</style>"]}]}