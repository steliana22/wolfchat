{"remainingRequest":"C:\\xampp\\htdocs\\WolfChat\\chat\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\WolfChat\\chat\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\WolfChat\\chat\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\WolfChat\\chat\\src\\views\\Messages.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\WolfChat\\chat\\src\\views\\Messages.vue","mtime":1564757888906},{"path":"C:\\xampp\\htdocs\\WolfChat\\chat\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\WolfChat\\chat\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\WolfChat\\chat\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\WolfChat\\chat\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport fb from '@/firebase/init';\nimport moment from 'moment';\nimport L from 'leaflet';\nexport default {\n  name: 'Messages',\n  data: function data() {\n    return {\n      messages: [],\n      newmessage: null,\n      errorText: null,\n      username: localStorage.username,\n      chatId: localStorage.ChatId\n    };\n  },\n  methods: {\n    createMessage: function createMessage() {\n      if (this.newmessage) {\n        fb.collection('users/' + this.chatId + '/messages').add({\n          user: this.username,\n          message: this.newmessage,\n          timestamp: Date.now()\n        }).catch(function (err) {\n          console.log(err);\n        });\n        this.newmessage = null;\n        this.errorText = null;\n      } else {\n        this.errorText = \"A message must be entered first!\";\n      }\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    var ref = fb.collection('users/' + this.chatId + '/messages').orderBy('timestamp');\n    ref.onSnapshot(function (snapshot) {\n      snapshot.docChanges().forEach(function (change) {\n        if (change.type = 'added') {\n          var doc = change.doc;\n\n          _this.messages.push({\n            id: doc.id,\n            user: doc.data().user,\n            message: doc.data().message,\n            timestamp: moment(doc.data().timestamp).format('LTS')\n          });\n        }\n      });\n    });\n    this.$root.$emit('showMarker');\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$root.$emit('hideMarker');\n  }\n};",{"version":3,"sources":["Messages.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAA,EAAA,MAAA,iBAAA;AACA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,CAAA,MAAA,SAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,UAAA,EAAA,IAFA;AAGA,MAAA,SAAA,EAAA,IAHA;AAIA,MAAA,QAAA,EAAA,YAAA,CAAA,QAJA;AAKA,MAAA,MAAA,EAAA,YAAA,CAAA;AALA,KAAA;AAOA,GAVA;AAWA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AACA,UAAA,KAAA,UAAA,EAAA;AACA,QAAA,EAAA,CAAA,UAAA,CAAA,WAAA,KAAA,MAAA,GAAA,WAAA,EAAA,GAAA,CAAA;AACA,UAAA,IAAA,EAAA,KAAA,QADA;AAEA,UAAA,OAAA,EAAA,KAAA,UAFA;AAGA,UAAA,SAAA,EAAA,IAAA,CAAA,GAAA;AAHA,SAAA,EAIA,KAJA,CAIA,UAAA,GAAA,EAAA;AACA,UAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA,SANA;AAOA,aAAA,UAAA,GAAA,IAAA;AACA,aAAA,SAAA,GAAA,IAAA;AACA,OAVA,MAUA;AACA,aAAA,SAAA,GAAA,kCAAA;AACA;AACA;AAfA,GAXA;AA4BA,EAAA,OA5BA,qBA4BA;AAAA;;AACA,QAAA,GAAA,GAAA,EAAA,CAAA,UAAA,CAAA,WAAA,KAAA,MAAA,GAAA,WAAA,EAAA,OAAA,CAAA,WAAA,CAAA;AACA,IAAA,GAAA,CAAA,UAAA,CAAA,UAAA,QAAA,EAAA;AACA,MAAA,QAAA,CAAA,UAAA,GAAA,OAAA,CAAA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,CAAA,IAAA,GAAA,OAAA,EAAA;AACA,cAAA,GAAA,GAAA,MAAA,CAAA,GAAA;;AACA,UAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AACA,YAAA,EAAA,EAAA,GAAA,CAAA,EADA;AAEA,YAAA,IAAA,EAAA,GAAA,CAAA,IAAA,GAAA,IAFA;AAGA,YAAA,OAAA,EAAA,GAAA,CAAA,IAAA,GAAA,OAHA;AAIA,YAAA,SAAA,EAAA,MAAA,CAAA,GAAA,CAAA,IAAA,GAAA,SAAA,CAAA,CAAA,MAAA,CAAA,KAAA;AAJA,WAAA;AAMA;AACA,OAVA;AAWA,KAZA;AAcA,SAAA,KAAA,CAAA,KAAA,CAAA,YAAA;AACA,GA7CA;AA8CA,EAAA,aA9CA,2BA8CA;AACA,SAAA,KAAA,CAAA,KAAA,CAAA,YAAA;AACA;AAhDA,CAAA","sourcesContent":["<template>\r\n    <div class=\"container\" style=\"margin-bottom: 30px\">\r\n        <div class=\"\" v-for=\"message in messages\" :key=\"message.id\">\r\n            <div v-bind:class=\"{ sameuser:(message.user === this.localStorage.username)  }\" class=\"message-box\" >\r\n                <h5 class=\"text-info\">{{ message.user }}</h5>\r\n                <p>{{message.message}}</p>\r\n            </div>\r\n        </div>\r\n        <form @submit.prevent=\"createMessage\">\r\n            <div class=\"form-group\">\r\n                <input type=\"text\" name=\"message\" class=\"form-control\" placeholder=\"Enter message ...\" v-model=\"newmessage\">\r\n                <p class=\"text-danger\" v-if=\"errorText\">{{ errorText }}</p>\r\n            </div>\r\n            <button class=\"btn btn-primary\" type=\"submit\" name=\"action\">Send</button>\r\n        </form>\r\n        <!-- <div class=\"card-action\">\r\n            <CreateMessage :name=\"name\"/>\r\n        </div> -->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport fb from '@/firebase/init'\r\nimport moment from 'moment'\r\nimport L from 'leaflet'\r\n\r\nexport default {\r\n    name: 'Messages',\r\n    data() {\r\n        return {\r\n            messages: [],\r\n            newmessage: null,\r\n            errorText: null,\r\n            username: localStorage.username,\r\n            chatId: localStorage.ChatId\r\n        }\r\n    },\r\n    methods: {\r\n        createMessage () {\r\n            if (this.newmessage) {\r\n                fb.collection('users/'+ this.chatId + '/messages').add({\r\n                    user: this.username,\r\n                    message: this.newmessage,\r\n                    timestamp: Date.now()\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n                this.newmessage = null;\r\n                this.errorText = null;\r\n            } else {\r\n                this.errorText = \"A message must be entered first!\";\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        let ref = fb.collection('users/'+ this.chatId + '/messages').orderBy('timestamp');\r\n        ref.onSnapshot(snapshot => {\r\n            snapshot.docChanges().forEach(change => {\r\n                if (change.type = 'added') {\r\n                    let doc = change.doc;\r\n                    this.messages.push({\r\n                        id: doc.id,\r\n                        user: doc.data().user,\r\n                        message: doc.data().message,\r\n                        timestamp: moment(doc.data().timestamp).format('LTS')\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        this.$root.$emit('showMarker');\r\n    },\r\n    beforeDestroy() {\r\n        this.$root.$emit('hideMarker');\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.message-box {\r\n    text-align: left;\r\n    background-color: rgba(147, 181, 226, 0.363);\r\n    width: 300px;\r\n}\r\n.sameuser {\r\n    background-color: blueviolet;\r\n}\r\n</style>"],"sourceRoot":"src/views"}]}